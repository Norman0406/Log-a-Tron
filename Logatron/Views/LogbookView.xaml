<UserControl
    x:Class="Logatron.Views.LogbookView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:viewmodels="using:Logatron.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:sys="using:System"
    d:DataContext="{d:DesignInstance Type=viewmodels:LogbookViewModel}"
    mc:Ignorable="d">
    <Grid RowDefinitions="*, Auto">
        <!-- Logbook data -->
        <controls:DataGrid
            Grid.Row="0"
            AutoGenerateColumns="False"
            GridLinesVisibility="Horizontal"
            IsReadOnly="True"
            SelectionMode="Single"
            ItemsSource="{x:Bind ViewModel.Entries, Mode=OneWay}"
            SelectedItem="{x:Bind ViewModel.SelectedEntry, Mode=TwoWay}">
            <controls:DataGrid.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="DataGridCellFocusVisualPrimaryBrush" Color="Transparent"/>
                    <SolidColorBrush x:Key="DataGridCellFocusVisualSecondaryBrush" Color="Transparent"/>
                    <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundColor" Color="Transparent" />
                </ResourceDictionary>
            </controls:DataGrid.Resources>

            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="Sorting">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.SortingChangedCommand}" />
                </ic:EventTriggerBehavior>

                <ic:EventTriggerBehavior EventName="RightTapped">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.SelectRowCommand}" />
                </ic:EventTriggerBehavior>

                <ic:EventTriggerBehavior EventName="DoubleTapped">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.BeginUpdateEntryCommand}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <controls:DataGrid.RowStyle>
                <Style TargetType="controls:DataGridRow">
                    <Setter Property="controls:DataGridRow.ContextFlyout">
                        <Setter.Value>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Edit">
                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="Click">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.BeginUpdateEntryCommand}" />
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Delete">
                                    <!--<Flyout>
                                        <StackPanel>
                                            <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="All items will be removed. Do you want to continue?" Margin="0,0,0,12" />
                                            <Button Click="DeleteConfirmation_Click" Content="Yes, empty my cart" />
                                        </StackPanel>
                                    </Flyout>-->

                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="Click">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.DeleteEntryCommand}" />
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </Setter.Value>
                    </Setter>
                </Style>
            </controls:DataGrid.RowStyle>

            <controls:DataGrid.Columns>
                <!-- TODO: Replace column definitions to match real data. Consider adding Header values to Resources.resw. -->
                <controls:DataGridTextColumn Binding="{Binding StartTime}" Header="Start Time" Tag="StartTime" />
                <controls:DataGridTextColumn Binding="{Binding EndTime}" Header="End Time" Tag="EndTime" />
                <controls:DataGridTextColumn Binding="{Binding Callsign}" Header="Callsign" Tag="Callsign" />
                <controls:DataGridTextColumn Binding="{Binding Name}" Header="Name" Tag="Name" />
                <controls:DataGridTextColumn Binding="{Binding Comments}" Header="Comments" Tag="Comments" />
            </controls:DataGrid.Columns>
        </controls:DataGrid>

        <!-- Footer -->
        <Grid Grid.Row="1" Margin="0,10,0,10" Height="30">
            <!-- Information and page size selection -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Spacing="5">
                <TextBlock VerticalAlignment="Center" Text="Showing" />
                <ComboBox VerticalAlignment="Center" SelectedIndex="{x:Bind ViewModel.SelectedPageSizeIndex, Mode=TwoWay}" ItemsSource="{x:Bind ViewModel.PageSizes}">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.UpdateLogbookCommand}"/>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>
                <TextBlock VerticalAlignment="Center"
                           Text="{x:Bind sys:String.Format(x:Null, '({0}) of {1} entries', ViewModel.Entries.Count, ViewModel.NumberOfEntries), Mode=OneWay}" />
            </StackPanel>

            <!-- Paging controls -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Spacing="5">
                <Button Command="{x:Bind ViewModel.GoToFirstPageCommand}">
                    <Image Source="{ThemeResource DoubleArrowLeft}" />
                </Button>

                <Button Command="{x:Bind ViewModel.GoToPreviousPageCommand}">
                    <Image Source="{ThemeResource ArrowLeft}" />
                </Button>

                <ItemsControl ItemsSource="{x:Bind ViewModel.Pages, Mode=OneWay}">
                    <ItemsControl.Resources>
                        <DataTemplate x:Key="pageButton" x:DataType="viewmodels:PageOrEllipsis">
                            <Button VerticalAlignment="Stretch"
                                    Content="{x:Bind PageNumber}" FontWeight="{x:Bind FontWeight}"
                                    Command="{x:Bind GoToPageNumberCommand}"
                                    CommandParameter="{x:Bind PageNumber}" />
                        </DataTemplate>

                        <DataTemplate x:Key="pageEllipsis" x:DataType="viewmodels:PageOrEllipsis">
                            <TextBlock VerticalAlignment="Center" Text="..." />
                        </DataTemplate>
                    </ItemsControl.Resources>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" VerticalContentAlignment="Stretch">
                                <i:Interaction.Behaviors>
                                    <ic:DataTriggerBehavior Binding="{Binding IsEllipsis}" Value="True">
                                        <ic:ChangePropertyAction PropertyName="ContentTemplate" Value="{StaticResource pageEllipsis}" />
                                    </ic:DataTriggerBehavior>

                                    <ic:DataTriggerBehavior Binding="{Binding IsEllipsis}" Value="False">
                                        <ic:ChangePropertyAction PropertyName="ContentTemplate" Value="{StaticResource pageButton}" />
                                    </ic:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </ContentControl>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Spacing="5" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                
                <Button Command="{x:Bind ViewModel.GoToNextPageCommand}">
                    <Image Source="{ThemeResource ArrowRight}" />
                </Button>

                <Button Command="{x:Bind ViewModel.GoToLastPageCommand}">
                    <Image Source="{ThemeResource DoubleArrowRight}" />
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
